{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCVA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,iBAAiB,mBAAO,CAAC,gCAAQ;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,UAAU,EAAE,cAAc,YAAY,UAAU;AAC5F;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,kBAAkB;AAClB,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,mCAAmC;AACnC,sCAAsC;AACtC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI,IAAI,QAAQ;AACjC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,IAAI;AACJ;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,6CAA6C;AAC7C;AACA,+CAA+C;AAC/C,mEAAmE,iBAAiB;AACpF,uBAAuB;AACvB;AACA,gDAAgD;AAChD;AACA;AACA,0DAA0D;AAC1D,iFAAiF;AACjF,aAAa;AACb;AACA;AACA,QAAQ;AACR;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,kD","sources":["webpack:///./src/js/main.js","webpack:///webpack/bootstrap","webpack:///./src/js/script.js"],"sourcesContent":["function myModule() {\r\n    this.hello = function() {\r\n        console.log(\"hello\");\r\n    };\r\n\r\n    this.goodbye = function() {\r\n        console.log(\"bye\");\r\n    };\r\n}\r\n\r\nmodule.exports = myModule;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// 102102102102 Webpack. Собираем наш проект\r\nconst myModule = require(\"./main\");\r\n\r\nconst myModuleInstance = new myModule();\r\n\r\nmyModuleInstance.hello();\r\nmyModuleInstance.goodbye();\r\n\r\n\r\n// 101101101101. Прием модуль, как и зачем его использовать\r\n// \"use strict\";\r\n\r\n// const number = 1; // глобальная\r\n\r\n// (function(){ // локальная\r\n//     let number = 2;\r\n//     console.log(number);\r\n//     console.log(number + 3);\r\n// }());\r\n\r\n// console.log(number);\r\n\r\n\r\n// const user = (function(){\r\n//     const privat = function() {\r\n//         console.log(\"Я приватный\");\r\n//     };\r\n\r\n//     return {\r\n//         sayHello: privat\r\n//     };\r\n// }());\r\n\r\n// user.sayHello();\r\n\r\n// 100100100100100100. Инкапсуляция\r\n// \"use strict\";\r\n\r\n// class User {\r\n//     constructor(name, age) {\r\n//         this.name = name;\r\n//         this._age = age;\r\n//     }\r\n\r\n//     #surname = \"Petrychenko\";\r\n\r\n//     say = () => {\r\n//         console.log(`Имя пользователя: ${this.name}${this.#surname}, возраст ${this._age}`);\r\n//     }\r\n\r\n//     get age() { // метод получение\r\n//         return this._age;\r\n//     }\r\n\r\n//     set age(age) { // метод установки\r\n//         if (typeof age === \"number\" && age > 0 && age < 110) {\r\n//             this._age = age;\r\n//         } else {\r\n//             console.log(\"Неверное значение!\");\r\n//         }\r\n//     }\r\n// }\r\n\r\n// const ivan = new User(\"Ivan\", 27);\r\n// console.log(ivan.age); // get - 27\r\n// ivan.age = 99; // set \r\n// console.log(ivan.surname); // get - 99\r\n// ivan.say();\r\n\r\n// 999999999999999999. Геттеры и сеттеры (свойства объектов)\r\n// \"use strict\";\r\n\r\n// const persone = {\r\n//     name: \"Alex\",\r\n//     age: 25,\r\n\r\n//     get userAge() {\r\n//         return this.age;\r\n//     },\r\n\r\n//     set userAge(num) {\r\n//         this.age = num;\r\n//     }\r\n// };\r\n\r\n// console.log(persone.userAge);\r\n// console.log(persone.userAge = 30);\r\n// console.log(persone.userAge);\r\n\r\n// 9696966969696996969696966996. Регулярные выражения\r\n// \"use strict\";\r\n\r\n// new RegExp(\"pattern\", \"flags\");\r\n// /pattern/flag\r\n\r\n// const ans = prompt(\"Введите ваше имя\");\r\n\r\n// const reg = /n/ig;\r\n\r\n// console.log(ans.match(reg));\r\n\r\n// const pass = prompt(\"Passwoed\");\r\n\r\n// console.log(pass.replace(/./g, \"*\"));\r\n\r\n// const ans = prompt(\"Введите ваше имя\");\r\n\r\n// const reg = /n/ig;\r\n// console.log(reg.test(ans));\r\n\r\n\r\n// 95599595959595959595. Как сохранить данные без БД. Работа с localStorage\r\n// \"use strict\";\r\n\r\n// localStorage.setItem(\"number\", 5); //чтобы записать новый ключ со значением\r\n// localStorage.getItem(\"number\"); //чтобы получить \r\n// localStorage.removeItem(\"number\"); //чтобы удалить\r\n// localStorage.clear(); //полное удаление\r\n\r\n\r\n// const checkbox = document.querySelector(\"#checkbox\");\r\n// const form = document.querySelector(\"form\");\r\n// const change = document.querySelector(\"#color\");\r\n\r\n// if (localStorage.getItem(\"isChecked\")) {\r\n//     checkbox.checked = true;\r\n// }\r\n\r\n// if (localStorage.getItem(\"bg\") === \"changed\") {\r\n//     form.style.backgroundColor = \"red\";\r\n// }\r\n\r\n// checkbox.addEventListener(\"change\", () => {\r\n//     localStorage.setItem(\"isChecked\", true);\r\n// });\r\n\r\n// change.addEventListener(\"click\", () => {\r\n//     if (localStorage.getItem(\"bg\") === \"changed\") {\r\n//          localStorage.removeItem(\"bg\");\r\n//          form.style.backgroundColor = \"#fff\";\r\n//     } else {\r\n//         localStorage.setItem(\"bg\", \"changed\");\r\n//         form.style.backgroundColor = \"red\";\r\n//     }\r\n// });\r\n\r\n// const persone = {\r\n//     name: \"Alex\",\r\n//     age: 25\r\n// };\r\n\r\n// const serializedPersone = JSON.stringify(persone);\r\n// localStorage.setItem(\"alex\", serializedPersone);\r\n\r\n// console.log(JSON.parse(localStorage.getItem(\"alex\")));\r\n\r\n\r\n// 8888888888888888888888888888888888. Методы перебора массивов\r\n// \"use strict\";\r\n\r\n///////////////////// filter\r\n\r\n// const names = [\"Ivan\", \"Ann\", \"Ksenia\", \"Vlodimer\"];\r\n\r\n// const shortNames = names.filter(function(name) {\r\n//     return name.length < 5;\r\n// });\r\n\r\n// console.log(shortNames);\r\n\r\n///////////////////// map\r\n\r\n// let answers = [\"IvAn\", \"AnnA\", \"KseNIa\", \"Vlodimer\"];\r\n\r\n// answers = answers.map(item => {\r\n//     return item.toLocaleLowerCase();\r\n// });\r\n\r\n// console.log(answers);\r\n\r\n///////////////////// every/some\r\n\r\n// const some = [4, \"qwq\", \"fsdasafs\"];\r\n\r\n// console.log(some.some(item => typeof(item) === \"number\"));\r\n\r\n// const every = [4, 5, 7];\r\n\r\n// console.log(every.every(item => typeof(item) === \"number\"));\r\n\r\n///////////////////// reduce\r\n\r\n// const arr = [4, 5, 1, 3, 2, 6];\r\n\r\n//                     // сумма  что приходит(4)\r\n// const res = arr.reduce((sum, current) => sum + current, 3)\r\n// console.log(res);\r\n\r\n// const arr = [\"appele\", \"pear\", \"plum\"];\r\n\r\n//                     // сумма  что приходит(4)\r\n// const res = arr.reduce((sum, current) => {\r\n//     return `${sum}, ${current}`;\r\n// });\r\n// console.log(res);\r\n\r\n// const obj = {\r\n//     ivan: \"persone\",\r\n//     ann: \"persone\",\r\n//     dog: \"animal\",\r\n//     cat: \"animal\"\r\n// };\r\n\r\n// const newArr = Object.entries(obj)\r\n// .filter(item => item[1] === \"persone\")\r\n// .map(item => item[0]);\r\n\r\n// console.log(newArr);\r\n\r\n\r\n// 868686868686868686868686868. Promise (ES6)\r\n// \"use strict\";\r\n\r\n// setTimeout(() => { // Асинхронны код Будет первый\r\n//     console.log(\"Loading...\");\r\n\r\n//     const product = {   // Будет вторым\r\n//         name: \"TV\",\r\n//         price: 2000\r\n//     };\r\n\r\n//     setTimeout(() => { // Будет третьим \r\n//         product.status = \"order\";\r\n//         console.log(product);\r\n//     }, 2000);\r\n// }, 2000);\r\n\r\n\r\n// console.log(\"Запрос...\"); \r\n\r\n// const req = new Promise(function(resolve, reject) {\r\n//     setTimeout(() => { \r\n//         console.log(\"Loading...\");\r\n    \r\n//         const product = {   \r\n//             name: \"TV\",\r\n//             price: 2000\r\n//         };\r\n    \r\n//         resolve(product);\r\n//     }, 2000);\r\n// });\r\n\r\n// req.then((product) => { // обрабатывает и выполняеться при успехе \r\n//     return new Promise(function(resolve, reject) {\r\n//         setTimeout(() => { \r\n//             product.status = \"order\";\r\n//             resolve(product);\r\n//         }, 2000);\r\n//     });\r\n// }).then(data => {\r\n//     data.modify = true;\r\n//     return data;\r\n// }).then((data) => {\r\n//     console.log(data);\r\n// }).catch(() => {\r\n//     console.error(\"data\");\r\n// }).finally(() => {\r\n//     console.error(\"Конец\");\r\n// });\r\n\r\n// const test = (time) => {\r\n//     return new Promise(resolve => {\r\n//         setTimeout(() => resolve(), time);\r\n//     });\r\n// };\r\n\r\n// test(1000).then(() => console.log(\"1000 ms\"));\r\n// test(2000).then(() => console.log(\"2000 ms\"));\r\n\r\n// Promise.all([test(1000), test(2000)]).then(() => {\r\n//     console.log(\"All\");\r\n// });\r\n\r\n// Promise.race([test(1000), test(2000)]).then(() => {\r\n//     console.log(\"All\");\r\n// });\r\n\r\n// 838383838383838838383838838. AJAX и общение с сервером\r\n// \"use strict\";\r\n\r\n// const inputRub =document.querySelector(\"#rub\");\r\n// const inputUsd =document.querySelector(\"#usd\");\r\n\r\n// inputRub.addEventListener(\"input\", () => { //работает всегда когда инпут меняеться \r\n//     const request = new XMLHttpRequest(); // запрос\r\n\r\n//     request.open(\"GET\", \"js/current.json\"); //он не открывает а собирает настройки для запроса\r\n//     request.setRequestHeader(\"Content-type\", \"application/json; charset=utf-8\"); //уточнение что передаем(Заголовки HTTP)\r\n//     request.send(); //отправка запроса \r\n\r\n//     request.addEventListener(\"load\", () => { //отслеживает статус готовности запроса\r\n//         if (request.status === 200) {\r\n//             console.log(request.response);\r\n//             const data = JSON.parse(request.response); //перевод в обычный формат js\r\n//             inputUsd.value = (+inputRub.value / data.current.usd).toFixed(2); //считаем и убирает лишнии цыфры после запятой\r\n//         } else {\r\n//             inputUsd.value = \"Что-то пошло не так\";\r\n//         }\r\n//     });\r\n\r\n// });\r\n\r\n// Свойства XMLHttpRequest \r\n// status - статус запроса (404)\r\n// statusText - тоже самое толко текстом (Ok, Eror)\r\n// response - ответ с бека\r\n// readyState - содержит текушее состояние запроса"],"names":[],"sourceRoot":""}